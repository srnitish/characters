{"version":3,"file":"static/js/677.73eaa155.chunk.js","mappings":"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","sources":["CharacterDetails.js"],"sourcesContent":["import React,{useEffect} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchCharacterById } from './redux/slice/characterSlices';\r\nimport { useParams, useNavigate, Link } from 'react-router-dom';\r\nimport imageLoader from './loader.gif';\r\n\r\nfunction CharacterDetails() {\r\n\r\n    const {error, loading, currentCharacter} = useSelector(state => state.character);\r\n    console.log(\"currentCharacter\",currentCharacter);\r\n    const dispatch = useDispatch();\r\n    const {id} = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(()=>{\r\n    dispatch(fetchCharacterById(id));\r\n    },[dispatch, id])\r\n\r\n    const handlePrevious = () => {\r\n        const previousId = currentCharacter.id - 1;\r\n        // dispatch(fetchCharacterById(previousId));\r\n        navigate(`/character/${previousId}`);\r\n      };\r\n    \r\n      const handleNext = () => {\r\n        const nextId = currentCharacter.id + 1;\r\n        // dispatch(fetchCharacterById(nextId));\r\n        navigate(`/character/${nextId}`);\r\n      };\r\n\r\n    if(error){\r\n        return <div>Error: {error}</div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n            <h1 className=\"text-center\">Characters Details</h1>\r\n            <div className=\"col-lg-3 col-md-3 col-sm-4\">\r\n                <Link to=\"/characters/\">\r\n                    <button className=\"btn btn-outline-secondary\" style={{marginRight: `10px`}}>Home</button>\r\n                </Link>\r\n                    <button className='btn btn-outline-primary' disabled={parseInt(id) <= 1} onClick={handlePrevious} style={{cursor:parseInt(id) <= 1 ? 'none': 'pointer', backgroundColor: parseInt(id) <= 1 ? '#eee': ''}}>Previous</button>\r\n                    <button className='btn btn-outline-primary' style={{marginLeft: `10px`}} onClick={handleNext}>Next</button>\r\n            </div>\r\n            {loading || !currentCharacter ? ( <div className='loader'><img src={imageLoader} alt='loader' width={80} height={80}/></div>) : (\r\n                <main>\r\n                    <div className=\"col-lg-3 col-md-6 col-sm-6\">\r\n                        <div key={currentCharacter.id} className=\"col-lg-12 mt-5 mb-3\">\r\n                            <div className=\"card profile-card-5\">\r\n                                <div className=\"card-img-block\">\r\n                                    <img className=\"card-img-top\" src={currentCharacter.image} alt={currentCharacter.image} width={100} />\r\n                                </div>\r\n                                <div className=\"card-body pt-0\">\r\n                                    <div><h6 className=\"card-title\">{currentCharacter.name}</h6></div>\r\n                                    <div> <span className={currentCharacter.status === 'Alive' ? 'alive' : currentCharacter.status === 'Dead' ? 'dead' : currentCharacter.status === 'unknown' ? 'unknown' : ''}>{' '}</span>{currentCharacter.status}, <span>{currentCharacter.gender}</span></div>\r\n                                    <div>\r\n                                    <p className=\"card-title\"><strong>Origin:</strong> {currentCharacter.origin.name}</p>\r\n                                    <p className=\"card-title\"><strong>Location:</strong> {currentCharacter.location.name}</p>\r\n                                    </div>\r\n                                    <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>  \r\n                </main>\r\n              )}\r\n           </div>\r\n        </div>\r\n    );\r\n}\r\nexport default CharacterDetails;"],"names":["error","loading","currentCharacter","useSelector","state","character","console","log","dispatch","useDispatch","id","useParams","navigate","useNavigate","useEffect","fetchCharacterById","_jsxs","children","_jsx","className","Link","to","style","marginRight","disabled","parseInt","onClick","handlePrevious","previousId","concat","cursor","backgroundColor","marginLeft","handleNext","nextId","src","imageLoader","alt","width","height","image","name","status","gender","origin","location"],"sourceRoot":""}